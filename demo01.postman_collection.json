{
	"info": {
		"_postman_id": "a411516f-4517-4730-8da6-c41a38c09141",
		"name": "demo01",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/ATDD-2025~4126338e-1964-4bb3-96e9-4ab4964767d8/collection/1453931-a411516f-4517-4730-8da6-c41a38c09141?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "Get user by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"// Check json schema of response",
							"pm.test(\"Response body is valid JSON\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Check if response body contains specific data",
							"pm.test(\"Response body contains specific data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Leanne Graham\");",
							"    pm.expect(jsonData.email).to.eql(\"Sincere@april.biz\");",
							"});",
							"",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"username\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"email\": {",
							"            \"type\": \"string\",",
							"            \"format\": \"email\"",
							"        },",
							"        \"address\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"street\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"suite\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"city\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"zipcode\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geo\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"lat\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"lng\": {",
							"                            \"type\": \"string\"",
							"                        }",
							"                    },",
							"                    \"required\": [\"lat\", \"lng\"]",
							"                }",
							"            },",
							"            \"required\": [\"street\", \"suite\", \"city\", \"zipcode\", \"geo\"]",
							"        },",
							"        \"phone\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"website\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"company\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"catchPhrase\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"bs\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"required\": [\"name\", \"catchPhrase\", \"bs\"]",
							"        }",
							"    },",
							"    \"required\": [\"id\", \"name\", \"username\", \"email\", \"address\", \"phone\", \"website\", \"company\"]",
							"}",
							"",
							"var data1 = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://jsonplaceholder.typicode.com/users/1"
			},
			"response": []
		}
	]
}